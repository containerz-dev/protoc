steps:
  - id: buildkit
    name: docker:20.10
    env:
      - "DOCKER_BUILDKIT=1"
    entrypoint: "docker"
    args:
      - image
      - build
      - --build-arg=DOCKER_VERSION=${_DOCKER_VERSION}
      - --build-arg=BUILDKIT_VERSION=${_BUILDKIT_VERSION}
      - -t
      - buildkit:cloudbuild
      - --target=buildkit
      - --file=./hack/dockerfiles/buildkit.dockerfile
      - ./hack/dockerfiles
    waitFor:
      - "-"

  - id: bootstrap_buildkitd
    name: buildkit:cloudbuild
    entrypoint: "docker"
    args:
      - container
      - run
      - --detach
      - --privileged
      - --name=buildkitd
      - --network=cloudbuild
      - moby/buildkit:${_BUILDKIT_VERSION}
    waitFor:
      - "buildkit"

  - id: protoc-builder
    name: buildkit:cloudbuild
    entrypoint: "buildctl"
    args:
      - --addr=docker-container://buildkitd
      - build
      - --frontend=dockerfile.v0
      - --local=context=/workspace
      - --local=dockerfile=/workspace
      - --opt=target=protoc-builder
      - --opt=build-arg:PROTOC_VERSION=${_PROTOC_VERSION}
      - --opt=build-arg:GOLANG_VERSION=${_GOLANG_VERSION}
      - --opt=build-arg:ALPINE_VERSION=${_ALPINE_VERSION}
      - --export-cache=type=inline
      - --import-cache=type=registry,ref=gcr.io/$PROJECT_ID/protoc/protoc-builder:cloudbuild_cache
    waitFor:
      - "bootstrap_buildkitd"

  - id: protoc
    name: buildkit:cloudbuild
    entrypoint: "buildctl"
    args:
      - --addr=docker-container://buildkitd
      - build
      - --frontend=dockerfile.v0
      - --local=context=/workspace
      - --local=dockerfile=/workspace
      - --opt=target=protoc
      - --opt=build-arg:PROTOC_VERSION=${_PROTOC_VERSION}
      - --opt=build-arg:GOLANG_VERSION=${_GOLANG_VERSION}
      - --opt=build-arg:ALPINE_VERSION=${_ALPINE_VERSION}
      - --output=type=image,name=gcr.io/$PROJECT_ID/protoc/protoc:${_PROTOC_VERSION},push=true,oci-mediatypes=true,compression=estargz
      - --import-cache=type=registry,ref=gcr.io/$PROJECT_ID/protoc/protoc-builder:cloudbuild_cache
    waitFor:
      - "protoc-builder"

  - id: protoc-debug
    name: buildkit:cloudbuild
    entrypoint: "buildctl"
    args:
      - --addr=docker-container://buildkitd
      - build
      - --frontend=dockerfile.v0
      - --local=context=/workspace
      - --local=dockerfile=/workspace
      - --opt=target=protoc-debug
      - --opt=build-arg:PROTOC_VERSION=${_PROTOC_VERSION}
      - --opt=build-arg:GOLANG_VERSION=${_GOLANG_VERSION}
      - --opt=build-arg:ALPINE_VERSION=${_ALPINE_VERSION}
      - --output=type=image,name=gcr.io/$PROJECT_ID/protoc/protoc:${_PROTOC_VERSION}-debug,push=true,oci-mediatypes=true,compression=estargz
      - --import-cache=type=registry,ref=gcr.io/$PROJECT_ID/protoc/protoc-builder:cloudbuild_cache
    waitFor:
      - "protoc-builder"

  - id: golang-builder
    name: buildkit:cloudbuild
    entrypoint: "buildctl"
    args:
      - --addr=docker-container://buildkitd
      - build
      - --frontend=dockerfile.v0
      - --local=context=/workspace
      - --local=dockerfile=/workspace
      - --opt=target=golang-builder
      - --opt=build-arg:PROTOC_VERSION=${_PROTOC_VERSION}
      - --opt=build-arg:GOLANG_VERSION=${_GOLANG_VERSION}
      - --opt=build-arg:ALPINE_VERSION=${_ALPINE_VERSION}
      - --opt=build-arg:PROTOC_GEN_GO_VERSION=${_PROTOC_GEN_GO_VERSION}
      - --opt=build-arg:PROTOC_GEN_GO_GRPC_VERSION=${_PROTOC_GEN_GO_GRPC_VERSION}
      - --export-cache=type=inline
      - --import-cache=type=registry,ref=gcr.io/$PROJECT_ID/protoc/protoc-builder:cloudbuild_cache

  - id: golang
    name: buildkit:cloudbuild
    entrypoint: "buildctl"
    args:
      - --addr=docker-container://buildkitd
      - build
      - --frontend=dockerfile.v0
      - --local=context=/workspace
      - --local=dockerfile=/workspace
      - --opt=target=golang
      - --opt=build-arg:PROTOC_VERSION=${_PROTOC_VERSION}
      - --opt=build-arg:GOLANG_VERSION=${_GOLANG_VERSION}
      - --opt=build-arg:ALPINE_VERSION=${_ALPINE_VERSION}
      - --opt=build-arg:PROTOC_GEN_GO_VERSION=${_PROTOC_GEN_GO_VERSION}
      - --opt=build-arg:PROTOC_GEN_GO_GRPC_VERSION=${_PROTOC_GEN_GO_GRPC_VERSION}
      - --output=type=image,name=gcr.io/$PROJECT_ID/protoc/golang:${_PROTOC_VERSION}-${_GOLANG_VERSION},push=true,oci-mediatypes=true,compression=estargz
      - --import-cache=type=registry,ref=gcr.io/$PROJECT_ID/protoc/cache/golang:${_PROTOC_VERSION}-${_GOLANG_VERSION}:cloudbuild_cache
    waitFor:
      - "protoc"
      - "golang-builder"

  - id: golang-debug
    name: buildkit:cloudbuild
    entrypoint: "buildctl"
    args:
      - --addr=docker-container://buildkitd
      - build
      - --frontend=dockerfile.v0
      - --local=context=/workspace
      - --local=dockerfile=/workspace
      - --opt=target=golang-debug
      - --opt=build-arg:PROTOC_VERSION=${_PROTOC_VERSION}
      - --opt=build-arg:GOLANG_VERSION=${_GOLANG_VERSION}
      - --opt=build-arg:ALPINE_VERSION=${_ALPINE_VERSION}
      - --opt=build-arg:PROTOC_GEN_GO_VERSION=${_PROTOC_GEN_GO_VERSION}
      - --opt=build-arg:PROTOC_GEN_GO_GRPC_VERSION=${_PROTOC_GEN_GO_GRPC_VERSION}
      - --output=type=image,name=gcr.io/$PROJECT_ID/protoc/golang:${_PROTOC_VERSION}-${_GOLANG_VERSION}-debug,push=true,oci-mediatypes=true,compression=estargz
      - --import-cache=type=registry,ref=gcr.io/$PROJECT_ID/protoc/protoc-builder:cloudbuild_cache
    waitFor:
      - "protoc-debug"
      - "golang-builder"

substitutions:
  _DOCKER_VERSION: "20.10"
  _BUILDKIT_VERSION: "v0.10.0"
  _PROTOC_VERSION: "3.19.4"  # https://github.com/protocolbuffers/protobuf/releases/tag/v3.19.0
  _GOLANG_VERSION: "1.17"
  _ALPINE_VERSION: "3.15"
  _PROTOC_GEN_GO_VERSION: "v1.27.1"  # https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.27.1
  _PROTOC_GEN_GO_GRPC_VERSION: "9c668aeab869"  # https://github.com/grpc/grpc-go/tree/9c668aeab869

tags:
  - "protoc.protoc"
  - "protoc.golang"

timeout: 900s  # 15min
